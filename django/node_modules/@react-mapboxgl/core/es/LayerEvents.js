import _map from 'lodash/map';
import _omit from 'lodash/omit';
import _keys from 'lodash/keys';
import _pick from 'lodash/pick';

var _class, _temp;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React from 'react';
import PropTypes from 'prop-types';

import Children from './Children';
import LayerEvent from './LayerEvent';

var LayerEvents = (_temp = _class = function (_React$PureComponent) {
  _inherits(LayerEvents, _React$PureComponent);

  function LayerEvents() {
    _classCallCheck(this, LayerEvents);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  LayerEvents.pickEvents = function pickEvents(props) {
    return _pick(props, _keys(_omit(LayerEvents.propTypes, 'layer')));
  };

  LayerEvents.prototype.render = function render() {
    var _this2 = this;

    return React.createElement(
      Children,
      null,
      _map(LayerEvents.propTypes, function (_, type) {
        return _this2.props[type] && type !== 'layer' ? React.createElement(LayerEvent, {
          key: type,
          type: type.slice(2).toLowerCase(),
          layer: _this2.props.layer,
          onChange: _this2.props[type]
        }) : null;
      })
    );
  };

  return LayerEvents;
}(React.PureComponent), _class.propTypes = {
  // Layer id.
  layer: PropTypes.string.isRequired,

  // Events.
  onDblClick: PropTypes.func,
  onClick: PropTypes.func,
  onMouseMove: PropTypes.func,
  onMouseEnter: PropTypes.func,
  onMouseLeave: PropTypes.func,
  onMouseOver: PropTypes.func,
  onMouseOut: PropTypes.func,
  onMouseDown: PropTypes.func,
  onMouseUp: PropTypes.func,
  onTouchStart: PropTypes.func,
  onTouchEnd: PropTypes.func,
  onTouchCancel: PropTypes.func,
  onContextMenu: PropTypes.func
}, _temp);


export default LayerEvents;